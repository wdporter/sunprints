<%- include("partials/head.ejs") %>

<script type="module">
import { createApp, ref, onMounted, watch } from "vue"
import Vue3EasyDataTable from "vue3easydatatable";

const App = {
	components: { EasyDataTable: Vue3EasyDataTable },
	setup() {
		const message = ref("Hello World!");
		const headers = ref([
        { text: "", value: "AuditLogId", sortable: true },
        { text: "Table", value: "ObjectName", sortable: true},
        { text: "Id", value: "Identifier", sortable: true},
        { text: "Action", value: "AuditAction", sortable: true},
        { text: "Created By", value: "CreatedBy", sortable: true},
        { text: "Created Date/Time", value: "CreatedDateTime", sortable: true, width: 190}
      ]);
		const items = ref([]);
		const loading = ref(false);
		const serverOptions = ref({
			page: 1,
			rowsPerPage: 100,
			sortBy: "AuditLogId",
			sortType: "DESC"
		});
		const themeColor = "darkorange";
		const serverItemsLength = ref(0);

		const loadFromServer = async () => {
			loading.value = true;
			const response = await fetch("/auditlog/edt", {
				method: "POST",
				headers: new Headers({"Content-Type": "application/json"}),
				body: JSON.stringify(serverOptions.value)
			});
			try {
				const result = await response.json();
				items.value = result.data;
				serverItemsLength.value = result.count;
			} catch (error) {
				console.log(error)
			}
			finally {
				loading.value = false;
			}
		};

		const loadAuditLogEntry = async (index) => {
			const myItem = items.value[index];
			myItem.expandLoading = true;
			try {
				const response = await fetch(`/auditlog/${myItem.AuditLogId}/entries`);
				const result = await response.json();
				myItem.AuditLogEntries = result;
			} finally {
				myItem.expandLoading = false
			}
		};

		onMounted(() => {
			loadFromServer();
		});

		watch(serverOptions, (value) => {loadFromServer();}, {deep: true})

		return {
			message,
			headers,
			items,
			loading,
			loadFromServer,
			loadAuditLogEntry,
			serverOptions,
			serverItemsLength,
			themeColor
		}
	}
}

const app = createApp(App)
//app.
app.mount("#app")

</script>

<div id=app>
	<h1>{{ message }}</h1>
	<easy-data-table
		v-model:server-options="serverOptions" 
		:server-items-length="serverItemsLength" 
		:loading="loading"
		:headers="headers"
		:items="items"
		:theme-color="themeColor"
		alternating
		must-sort
		buttons-pagination
		@expand-row="loadAuditLogEntry"
	/>
	<template #expand="item">
		<table style="margin-left:10em;table-layout: auto; width:revert; min-width:revert">
			<thead><tr><th>Property</th><th>Old Value</th><th>New Value</th></tr></thead>
			<tbody>
				<tr v-for="entry of item.AuditLogEntries" :key="item.AuditLogEntryId">
					<td>{{ entry.PropertyName }}</td>
					<td>{{ entry.OldValue }}</td>
					<td>{{ entry.NewValue }}</td>
				</tr>
			</tbody>
		</table>
	</template>
</div>


<%- include('partials/foot.ejs'); %>