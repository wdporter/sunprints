<%- include("partials/head.ejs") %>


<h3>Showing currently outstanding orders</h3>

<ul>
	<!-- <li>todo: clone an order</li> -->
	<li>To complete an Order, select the Order and click Ship (sets done=true. If invoice/processed dates are empty, they are set to today)</li>
	<li>To add/remove garments, or change details, select the Order and click Edit (or double click)</li>
	<li>The green + plus icon reveals the garments.  </li>
	<li>Deleting an order returns the garment quantities back into stock levels on the garments page</li>
	<li><a href="/order/new">Create a new order</a></li>
	<li style="margin-bottom:3em"><a href=/order/deleted>View deleted orders</a></li>
</ul>
</main>


<dialog id="confirmCloneDialog" >
	<h3>Clone order</h3>
	<p>We will clone this order to a new order, including all garment details</p>
	<p>The garment levels will be reduced according to what’s on the order</p>
	<p>The new order will be added to the Sales History table</p>
	<p>After the clone is complete, you can change details, garments and quantities</p>
	<h4>Continue?</h4>
	<form method="dialog">
		<button value="default">OK</button>&emsp;
		<button value="cancel">Cancel</button>
	</form>
</dialog>


<table id=orderTable class=hover>
	<thead>
		<tr>
			<th></th>
			<th>Action</th>
			<th>Order Number</th>
			<th>Updated</th>
			<th>Done</th>
			<th>Customer</th>
			<th>Customer<br>Order<br>Number</th>
			<th>Order Date</th>
			<th>Invoice Date</th>
			<th>Repeat</th>
			<th>New</th>
			<th>Buy In</th>
			<th>Terms</th>
			<th>Sales<br />Rep.</th>
			<th>Notes</th>
			<th>Delivery Date</th>
			<th>Processed Date</th>
		</tr>
	</thead>
	<tbody></tbody>
</table>


<main>


	<script>

	function cloneOrder(id) {
		
		window.location.href = "/order/new?clone=" + id
	}



		function format(d) {
			const ret = fetch(`/order/dt/garments/${d.OrderId}`)
				.then(response => {
					if (response.ok)
						return response.json()
					else
						throw new Error(response.statusText)
				})
				.then(data => {
					var ret = "<div style=display:flex>"
					for (var item of data) {
						ret += "<div class=garmentDiv>"
						for (var d in item)
							ret += `${d}: ${item[d]}</br>`
						ret += "</div>"
					}
					ret += "</div>"
					return ret
				})
				.catch(err => window.alert(`We enountered an error: ${error}`))
			return ret
		}


		window.datatable = new DataTable("#orderTable", {
			dom: "lf<'buttondiv'B>rtip",
			fixedHeader: true,
			processing: true,
			serverSide: true,
			ajax: "/order/dt",
			language: {
				searchPlaceholder: "Search order number, customer or notes"
			},
			buttons: [
				{
					text: "Edit",
					action: (e, dt) => {
						var tr = dt.row("tr.selected")
						if (tr.length) {
							window.location.href = `/order/edit?id=${tr.data().OrderId}`
						}
					}
				},
				{
					text: "Ship",
					action: (e, dt) =>  {
						var tr = dt.row("tr.selected")
						if (tr.length)
							ship(tr.data().OrderId)
					}
				},
				{
					text: "Print job sheet",
					action: (e, dt) => {
						var tr = dt.row("tr.selected")
						if (tr.length)
							window.open(`/order/jobsheet/${tr.data().OrderId}`)
					}
				},
				{
					text: "Print designs",
					action: (e, dt) => {
						var tr = dt.row("tr.selected")
						if (tr.length)
							window.open(`/order/printdesigns/${tr.data().OrderId}`)
					}
				},
				{
					text: "Delete",
					action: (e, dt) =>  {
						var tr = dt.row("tr.selected")
						if (tr.length)
							deleteOrder(tr.data().OrderId)
					}
				},
				{
					text: "Clone",
					action: (e, dt) =>  {
						var tr = dt.row("tr.selected")
						if (tr.length)
							cloneOrder(tr.data().OrderId)
					}
				},
			],
			columns: [
				{
					className: "dt-control",
					orderable: false,
					data: null,
					defaultContent: "<br>",
					sortable: false,
					width: "1em"
				},
				{
					data: "OrderId",
					visible: false
				},
				{ 
					data: "OrderNumber",
					render(data, type, row) {
						return `<span title="id: ${row.OrderId}">${data}</span>`
					}
			 	},
				{
					data: "Updated",
					visible: false
				},
				{
					data: "Done",
					visible: false
				},
				{ data: "CustomerName" },
				{ data: "CustomerOrderNumber" },
				{
					data: "OrderDate",
					render(od) {
						return od ? new Date(Date.parse(od)).toLocaleDateString() : ""
					}
				},
				{
					data: "InvoiceDate",
					render(id) {
						return id ? new Date(Date.parse(id)).toLocaleDateString() : ""
					}
				},
				{
					data: "Repeat",
					className: "alignCentre",
					render(r) {
						return r == 0 ? "" : "✔️"
					},
				},
				{
					data: "New",
					className: "alignCentre",
					render(n) {
						return n == 0 ? "" : "✔️"
					},
				},
				{
					data: "BuyIn",
					className: "alignCentre",
					render(r) {
						return r == 0 ? "" : "✔️"
					},
				},
				{ data: "Terms" },
				{ data: "SalesRep" },
				{
					data: "Notes",
					width: "200px"
				},
				{ data: "DeliveryDate" },
				{
					data: "ProcessedDate",
					render(id) {
						return id ? new Date(Date.parse(id)).toLocaleDateString() : ""
					}
				},
			],
			order: [[0, "desc"]]
		})


		// Add event listener for opening and closing details
		$('#orderTable tbody').on('click', 'td.dt-control', function () {
			var tr = $(this).closest('tr');
			var row = window.datatable.row(tr);

			if (row.child.isShown()) {
				// This row is already open - close it
				row.child.hide();
				tr.removeClass('shown');
			}
			else {
				// Open this row
				let myData = format(row.data())
				myData.then(d => row.child(d).show())
				tr.addClass('shown');
			}
		})


		function ship(id) {
			fetch(`/order/ship/${id}`, { method: "PUT" })
			.then(response => {
				if (response.ok)
					window.datatable.ajax.reload(null, false)
				else
					throw new Error(response.statusText)
			})
			.catch(error => window.alert(`We encountered an error: ${error}`))
		}


		function deleteOrder(id) {

			if (window.confirm(`We will delete this order. Continue?`)) {
				fetch(`/order/${id}`, { method: "DELETE" })
					.then(response => {
						if (response.ok)
							window.datatable.ajax.reload(null, false)
						else
							throw new Error(response.statusText)
					})
					.catch(error => alert("We encountered an error: " + error))
			}
		}


		// to select a row
		$('tbody').on('click', 'tr', function () {
			if ($(this).hasClass('selected')) {
				$(this).removeClass('selected');
			}
			else {
				window.datatable.$('tr.selected').removeClass('selected');
				$(this).addClass('selected');
			}
		})


		// double clicking a row will go straight to the edit page
		$('tbody').on('dblclick', 'tr', function () {
			const id = window.datatable.row(this).data().OrderId
			window.location.href = `/order/edit?id=${id}`
		})


	</script>


	<%- include("partials/foot.ejs") %>