<%- include("partials/head.ejs") %>

<button id="topClearButton" onclick="clearSearchFields()" style="margin-left:3em;">Clear Search</button>

<section>
	<div>
		<fieldset>
			<legend>Customer details</legend>
			<p>
				<label for="customerCode">Customer code</label>
				<select id="customerCode" data-location="customercodes">
					<option value="0">--select--</option>
				</select>
			</p>
			<p>
				<label for="customerName">Customer name</label>
				<select id="customerName" data-location="customernames">
					<option value="0">--select--</option>
				</select>
			</p>
		</fieldset>
		<fieldset>
			<legend>Sales Rep.</legend>
			<p>
				<label for=salesRep>Name</label>
				<select id="salesRep" data-location="salesreps">
					<option value="0">--select--</option>
				</select>
			</p>
		</fieldset>
		<fieldset>
			<legend>Date range</legend>
			<p>
				<label for="dateFrom">Date From</label>
				<input type=date id="dateFrom" />
			</p>
			<p>
				<label for="dateTo">Date To</label><!-- one year ago -->
				<input type=date id="dateTo" />
			</p>
			<p><a href=# id="dateRangeCsv">Download CSV</a></p>
		</fieldset>
		<fieldset>
			<legend>Order Number</legend>
			<p>
				<label for=orderNumber>Order Number</label>
				<input type=search id=orderNumber />
			</p>
		</fieldset>
	</div>
	<div>
		<fieldset>
			<legend>Print</legend>
			<p>
				<label for="print">Design</label>
				<select id="print" data-location="prints">
					<option value="0">--select--</option>
				</select>
			</p>
			<p>
				<label for="screen">Screen</label>
				<select id="screen" data-location="screens">
					<option value="0">--select--</option>
				</select>
			</p>
		</fieldset>
		<fieldset>
			<legend>Embroidery</legend>
			<p>
				<label for="embroidery">Design</label>
				<select id="embroidery" data-location="embroideries">
					<option value="0">--select--</option>
				</select>
			</p>
			<p>
				<label for="usb">Usb</label>
				<select id="usb" data-location="usbs">
					<option value="0">--select--</option>
				</select>
			</p>
		</fieldset>
		<fieldset>
			<legend>Transfer</legend>
			<p>
				<label for="transfer">Design</label>
				<select id="transfer" data-location="transfers">
					<option value="0">--select--</option>
				</select>
			</p>
			<p>
				<label for="transferName">Name</label>
				<select id="transferName" data-location="transfernames">
					<option value="0">--select--</option>
				</select>
			</p>
	</fieldset>
	<div>
		<button onclick="clearSearchFields()">Clear Search</button>
	</div>
	</div>
</section>



</main>

<main class="wider">

	<table id="dt" class="display compact">
		<thead>
			<tr>
				<th></th>
				<th>Order Id</th>
				<th>Order Number</th>
				<th>Order Date</th>
				<th>Rep.</th>
				<th>Processed Date</th>
				<th>Delivery Date</th>
				<th>Designs</th>
				<th>Customer name</th>
				<th>Terms</th>
				<th>Buy In</th>
				<th>Notes</th>
				<th>Done</th>
			</tr>
		</thead>
	</table>



	
<script>

function cloneOrder(a, event) {
		event.preventDefault()
		const tr = a.closest("tr")
		const api = $("table#dt").dataTable().api()
		const row = api.row(tr)
		const data = row.data()
		const orderid = data.OrderId
		window.location.href = `/order/new?clone=${orderid}`
		console.log(orderid)
	}


window.datatable = new DataTable("table#dt", {
		fixedHeader: true,
		processing: true,
		serverSide: true,
		dom: "l<'buttondiv'B>rtip", 

		ajax: { 
			url: "/sales/dt",
			data: function(d) {
				d.customSearch = {
					Company: document.getElementById("customerName").value,
					Code: document.getElementById("customerCode").value,
					DateFrom: document.getElementById("dateFrom").value,
					DateTo: document.getElementById("dateTo").value,
					Print: document.getElementById("print").value,
					Screen: document.getElementById("screen").value,
					Embroidery: document.getElementById("embroidery").value,
					Usb: document.getElementById("usb").value,
					Transfer: document.getElementById("transfer").value,
					TransferName: document.getElementById("transferName").value,
					SalesRep: document.getElementById("salesRep").value,
					OrderNumber: document.getElementById("orderNumber").value
				}
			}
		},
		order: [[3, "desc"]],
		columns: [
			{
				className: 'dt-control',
				orderable: false,
				data: null,
				title: "Actions",
				width: "4em",
				render(data) {
<% if (!poweruser) { %>
						return ""
<% } %>
					let retVal =""// clone doesn't work properly `&ensp;<a href=# onclick="cloneOrder(this, event)" title="Clone this order"><span class="fa fa-clone fa-lg" style="margin-top:.5em"></span></a>`

					let href = ""

					if (data.DateProcessed)
						href = `/sales/edit/${data.OrderId}`
					else
						href = `/order/edit?id=${data.OrderId}`
					
						retVal += `&ensp;<a href="${href}" title="Edit this order"><span class="fa fa-edit fa-lg" style="margin-top:.5em"></span></a>`
					return retVal
				}			},
			{ data: "OrderId",
				visible: false
			},
			{ data: "OrderNumber", width: "3em" }, 
			{ data: "OrderDate", 
				width: "3em",
				render: function(data) {
					const num = Date.parse(data)
					if (isNaN(num))
						return data
					else
						return new Date(num).toLocaleDateString("en-AU").split("/").map(d => d.replace(/^0/, "")).join("/")
				}
			},
			{ data: "SalesRep", width: "3em" }, 
			{ data: "DateProcessed", 
				width: "4em",
				render: function(data) {
					const ts = Date.parse(data)
					if (isNaN(ts))
						return data
					else
						return `<strong>${new Date(ts).toLocaleDateString("en-AU").split("/").map(d => d.replace(/^0/, "")).join("/")}</strong>`
					}
			}, 
			{ data: "Delivery",
				width: "4em"
			},
			{
				data: "designItems",
				render(data) { return data.join("<br>")},
				orderable: false
			}, 
			{ data: "Company",
				render: function(data, word, row) {
					return `<a href=/customer/edit?id=${row.CustomerId}>${data}</a>`
				}	
		}, 
			{ data: "Terms", width: "2em" }, 
			{ data: "BuyIn",
				width: "1em",
				render: function(data, word, row) {
					if (row.StockOrderId == null || row.StockOrderId=="0")
						return ""
					else
						return `<a href="/purchasing?stockorderid=${row.StockOrderId}">${row.StockOrderId}</a>`
				}
			}, 
			{ data: "Notes" }, 
			{ data: "Done",
				width: "1em",
				render: function(data) {
					return data ? "✔️" : ""
				}
			}
		],
		buttons: [
			{
				text: "Expand all",
				action: (e, dt, node, config) => {
					if (dt.buttons().text()[0] == "Expand all") {
						Array.from(document.querySelectorAll("td.dt-control")).forEach(function(td) {
							if (!td.classList.contains("shown"))
								$(td).trigger("click")
						})
						dt.buttons(0).text("Collapse all")
					} 
					else if (dt.buttons().text()[0] == "Collapse all") {
						Array.from(document.querySelectorAll("td.dt-control")).forEach(function(td) {
							if (td.classList.contains("shown"))
								$(td).trigger("click")
						})
						dt.buttons(0).text("Expand all")
					}
				}
			},
		]
	})

window.datatable.on("draw", function() {
		window.datatable.buttons(0).text("Expand all")
	})

function format(data) {
		if (!data) return // happens when you click the clone button

//		const retVal = 
//			return retVal

	}

async function onOpenRowButtonClick(evt) {
		const row = window.datatable.row(evt.target)
		const data = row.data()

		if (row.child.isShown()) {
				// This row is already open - close it
				row.child.hide();
				evt.target.classList.remove('shown');
		} else {
				// Open this row
				var response = await fetch(`/sales/${data.OrderId}/history`)
				if (response.ok) {
					var json = await response.json()
					let html = "<div style=display:flex>"
					if (json.length == 0)
					html += "<span class=nousbs>no sales items<span>"
					else {
						for (var item of json) {
							html += "<div class=sales-item>"
							const items = []
							for (key in item) {
								if (item[key]) {
									if (key == "Product")
										items.push(`<span class=nowrap>${item[key]}</span>`)
									else if (key == "Product2")
										items.push(`<span class=nowrap>${item[key]}</span>`)
									else if (key == "ASm")	
										items.push(`<b>AS</b>: ${item[key]}`)
									else if (key == "Price") 
										items.push(`<b>Price:</b> ${item[key].toLocaleString('en-AU', {style: 'currency', currency: 'AUD'})}`)
									else 
										items.push(`<b>${key}</b>: ${item[key]}`)
								}
							}
							html += items.join("<br>")
							html += "</div>"
						}
					}
					html += "</div>"

					const totalValue = json.reduce((acc, curr) => {
						return acc + parseFloat(curr.Value.replace("$", ""))
					}, 0)
					html += `Total Value: $${totalValue.toFixed(2)}`

					row.child(html).show()
					evt.target.classList.add('shown');

				}
				else 
					throw new Error(response.statusText)
		}
	}


// Add event listener for opening and closing details
document.querySelector("table#dt tbody").addEventListener("click", onOpenRowButtonClick)


Array.from(document.querySelectorAll("fieldset select")).forEach(s => {
	// when focus happens first time, load options via ajax
	s.addEventListener("focus", function() {
		if (this.childElementCount == 1) {
			fetch(`/sales/${this.dataset.location}`)
			.then(response => response.json() )
			.then(json => {
				for(item of json) {
					this.insertAdjacentHTML("beforeend", `<option value="${item.value}">${item.name}`)
				}
			})
		}
	})
})


Array.from(document.querySelectorAll("fieldset select")).forEach(s => {
	s.addEventListener("change", function(input) {
		// select fields searching is exclusive of order number so reset it
		document.getElementById("orderNumber").value = "";
		window.datatable.ajax.reload()
	})
})

Array.from(document.querySelectorAll("fieldset input")).forEach(function(s)  {
	s.addEventListener("input", function() {
		if (s.id == "orderNumber") {
			// if it's the ordernumber field, reset all selects and date fields
			Array.from(document.querySelectorAll("fieldset select")).forEach(select => select.value = "0")
			Array.from(document.querySelectorAll("fieldset input[type=date]")).forEach(date => date.value = "")
		}
		else {
			// it was the date fields, reset our order number
			document.getElementById("orderNumber").value = "";
		}
		window.datatable.ajax.reload()
	})
})



document.getElementById("dateRangeCsv").addEventListener("click", function(event) {

	const dateFrom = document.getElementById("dateFrom").value
	const dateTo = document.getElementById("dateTo").value
	if (dateFrom != "" && dateTo != "" && dateFrom <= dateTo) {
			event.target.setAttribute("href", `/sales/csv?datefrom=${dateFrom}&dateto=${dateTo}` )
	}
	else 
		event.preventDefault()
})

document.getElementById("dateFrom").addEventListener("input", function() {
	document.getElementById("dateTo").setAttribute("min", this.value)
})

document.getElementById("dateTo").addEventListener("input", function() {
	document.getElementById("dateFrom").setAttribute("max", this.value)
})


function clearSearchFields() {

	Array.from(document.querySelectorAll("input[type=date]")).forEach(i => i.value = "")

	Array.from(document.querySelectorAll("fieldset select")).forEach(s => s.value = 0)

	document.querySelector("fieldset input[type=search]").value = ""


	datatable.ajax.reload()
}

var button = document.getElementById("topClearButton")
document.querySelector("main>h1").appendChild(button)

</script>



	<%- include("partials/foot.ejs") %>